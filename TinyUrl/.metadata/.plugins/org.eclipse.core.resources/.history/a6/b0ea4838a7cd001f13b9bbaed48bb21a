package com.url.shortener.security.jwt;

import java.util.Date;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Value;

import com.url.shortener.service.UserDetailsImp;

import io.jsonwebtoken.Jwts;
import jakarta.servlet.http.HttpServletRequest;

public class JwtUtils {
	//Authorization Header-> Bearer <Token> 
	
	
	@Value("${jwt.secret}")
	private String jwtSecret;
	
	@Value("${jwt.expiration}")
	private int jwtExpirationMs;
	
	
	public String getJwtFromHeader(HttpServletRequest request) {
		String bearerToken = request.getHeader("Authorization");
		
		if(bearerToken != null && bearerToken.startsWith("Bearer ")) {
			return bearerToken.substring(7);
		}
		
		return null;
	}
	
	public String generateToken(UserDetailsImp userDetails) {
		
		String username = userDetails.getUsername();
		String roles = userDetails.getAuthorities().stream()
						.map(authority->authority.getAuthority())
						.collect(Collectors.joining(","));
		return Jwts.builder()
				.subject(username)
				.claim("roles",roles)
				.issuedAt(new Date())
				.expiration(new Date((new Date().getTime() + jwtExpirationMs)))
				.signWith()
				.compact();
	}
	
	private Key key() {
		
	}

}
